package com.zhd.exploit.api.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.zhd.exploit.api.dto.BizException;
import com.zhd.exploit.api.dto.PayDTO;
import com.zhd.exploit.api.dto.RspPayDTO;
import com.zhd.exploit.api.dto.RspQueryDTO;
import com.zhd.exploit.api.enums.PayErrorCode;
import com.zhd.exploit.api.service.PayDetailLogService;
import com.zhd.exploit.api.service.PayService;

@RestController
public class PayController {

	@Autowired
	private PayService payService;

	@Autowired
	private PayDetailLogService payDetailLogService;

	@RequestMapping(value = "/pay", method = RequestMethod.POST)
	public RspPayDTO pay(@RequestBody PayDTO payDTO) {
		String uuid = payDetailLogService.saveLog(payDTO);
		try {
			RspPayDTO rspPayDTO = payService.pay(payDTO);
			payDetailLogService.updateDetailLog(uuid, new Gson().toJson(rspPayDTO));
			return rspPayDTO;
		} catch (Exception e) {
			if (e instanceof BizException) {
				BizException bizException = (BizException) e;
				RspPayDTO rspPayDTO = new RspPayDTO(bizException);
				payDetailLogService.updateDetailLog(uuid, new Gson().toJson(rspPayDTO));
				return rspPayDTO;
			} else {
				e.printStackTrace();
				payDetailLogService.updateDetailLog(uuid, e.getMessage());
				return new RspPayDTO(PayErrorCode.EXCEPTION);
			}
		}
	}

	@RequestMapping(value = "/queryResult")
	public RspQueryDTO queryResult(PayDTO payDTO) {
		try {
			return payService.queryResult(payDTO);
		} catch (Exception e) {
			e.printStackTrace();
			return new RspQueryDTO(PayErrorCode.EXCEPTION);
		}
	}

}
