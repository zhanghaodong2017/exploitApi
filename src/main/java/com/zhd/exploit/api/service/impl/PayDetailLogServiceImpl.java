package com.zhd.exploit.api.service.impl;

import java.util.Date;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.zhd.exploit.api.dto.PayDTO;
import com.zhd.exploit.api.entity.PayDetailLog;
import com.zhd.exploit.api.mapper.PayDetailLogMapper;
import com.zhd.exploit.api.service.PayDetailLogService;

@Service
public class PayDetailLogServiceImpl implements PayDetailLogService {

	@Autowired
	private PayDetailLogMapper payDetailLogMapper;

	@Override
	public String saveLog(PayDTO payDTO) {
		String uuid = UUID.randomUUID().toString().replaceAll("-", "");
		try {
			PayDetailLog payDetailLog = new PayDetailLog();
			payDetailLog.setUuid(uuid);
			payDetailLog.setCreatetime(new Date());
			payDetailLog.setAppmount(payDTO.getAppmount());
			payDetailLog.setCporderno(payDTO.getCporderno());
			payDetailLog.setMerchantid(payDTO.getMerchantid());
			payDetailLog.setNotifyurl(payDTO.getNotifyurl());
			payDetailLog.setPaytype(payDTO.getPaytype());
			payDetailLog.setSubject(payDTO.getSubject());
			payDetailLog.setTransdata(payDTO.getTransdata());
			payDetailLogMapper.insert(payDetailLog);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return uuid;
	}

	@Override
	public void updateDetailLog(String uuid, String remark) {
		try {
			PayDetailLog payDetailLog = new PayDetailLog();
			payDetailLog.setUuid(uuid);
			if (remark != null && remark.length() > 224) {
				remark = remark.substring(0, 224);
			}
			payDetailLog.setRemark(remark);
			payDetailLogMapper.updateByPrimaryKeySelective(payDetailLog);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
